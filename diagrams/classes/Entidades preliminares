
"Razas de los personajes que se extiende a los edificios"
@startuml

abstract class Raza{
	-vida: Vida
	{abstract}+recibirDanio()
}
class Protoss{
	-escudo: Escudo
}
Raza <|-- Zerg
Raza <|-- Protoss

abstract class Personaje
abstract class Construccion

Construccion *-- Raza
Personaje *-- Raza 



@enduml


"Recursos"
@startuml

class Mineral{
	-unidad: Unidad
	+disminuirUnidades(cantidad)
}
class Nodo
abstract class Gas
class Vespeno
class Volcan
class RefineriaDeGas
class Geiser
class Cristal

interface Recolectable

Gas <|-- Vespeno


abstract class Unidad{
	-cantidad
	+Unidad(cantidad)
}

class Turno{
	- tie
}

@enduml

"Edificios Zerg"
@startuml

interface Construible{
	+construir()
}
interface Destruible
interface Daniable
interface Recuperable
interface Evolucionable{
	+evolucionar(Zerg)
}
interface Mutable
interface Creable
interface Edificable
interface Habilitable
interface Transformable

class Unidad
class Larva{
	+evolucionar(): Zangano
}

class Evolucionador{
	+evolucionar(Zerg)
}

Evolucionador ..> Evolucionable

class Zangano
class Construccion
class Moho
class Criadero
class Extractor
class ReservaDeProduccion
class Guarida
class Espiral


@enduml


"Clases que tienen unidades que se gastan"
@startuml

abstract class Consumible
Consumuble <|-- Tiempo
Consumuble <|-- Vida
Consumuble <|-- Unidad

class Nombre
class Costo
class Tiempo{
	-cantidad: Int
	+Tiempo(cantidad: int)
	+pasarTiempo()
}

class Vida
class Unidad{
	-cantidad
}
class Turno

@enduml


" Edificios Protoss"
@startuml

class Escudo
class Vida
class Pilon
class RadioDeAlcance
class NexoMineral
class MatrizPsi
class Asimilador
class CapsulaDeGas
class Acceso
class GrietaDistorcion
class Entrada
class Tropa
class Aiur
class PuertoEstelar


interface Daniable
interface Recuperable
interface Construible
interface Destruible
interface Edificable
interface Energizable
interface Emitible
interface Producible
interface Entrenable
interface Transportable


@enduml

